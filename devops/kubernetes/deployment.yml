apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-nodejs
  namespace: api-production
  labels:
    app: api-nodejs
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-nodejs
  template:
    metadata:
      labels:
        app: api-nodejs
        version: v1
    spec:
      containers:
      - name: api-nodejs
        image: registry.gitlab.com/example/api-nodejs:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: api-nodejs-service
  namespace: api-production
spec:
  selector:
    app: api-nodejs
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: api-production
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.example.com
    secretName: api-tls
  rules:
  - host: api.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-nodejs-service
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: api-production
data:
  log-level: "info"
  api-version: "v1"
---
apiVersion: v1
kind: Secret
metadata:
  name: api-secrets
  namespace: api-production
type: Opaque
data:
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAZGI6NTQzMi9hcGk=  # base64 encoded
  redis-url: cmVkaXM6Ly9yZWRpczo2Mzc5  # base64 encoded
  jwt-secret: c2VjcmV0LWtleS1oZXJl  # base64 encoded
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-nodejs-hpa
  namespace: api-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-nodejs
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 